service UserAudio {
  decls __callee__ {

    includefiles { "<stdlib.h>",
	    	   "<stdio.h>",
	    	   "<string.h>",
	    	   "<unistd.h>",
	           "<sys/types.h>",
	    	   "<nexus/defs.h>",
   		   "<nexus/Debug.interface.h>" }

    static int globalhz;
    extern int reset_speed_nexus(int val);
    extern int i810_ioctl_nexus(unsigned int cmd, Call_Handle call_handle, 
				struct VarLen *destin, struct VarLen *destout);
    extern ssize_t i810_write(const char *buffer, size_t count, loff_t *ppos);
  }

  interface lf_generate { OID_NONE; } lf_check { lf_oid == OID_NONE; }
  int Init(int block) 
  {
    globalhz = 44100;
    return 1;
  }

  interface lf_generate { OID_NONE; } lf_check { lf_oid == OID_NONE; }
  int SetRate(int handle, int hz) 
  {
    int old = globalhz;
    globalhz = hz;
    reset_speed_nexus(hz);
    return old;
  }

  interface lf_generate { OID_NONE; } lf_check { lf_oid == OID_NONE; }
  int Ioctl(int handle, unsigned int cmd, 
	    __input__ struct VarLen destin, 
	    __output__ struct VarLen destout)
  {
    int ret = i810_ioctl_nexus(cmd, call_handle, &destin, &destout);
      if(ret != 0)
	printf("ret is %d\n", ret);
      assert(ret == 0);
      return ret;
  }

  interface lf_generate { OID_NONE; } lf_check { lf_oid == OID_NONE; }
  int Write(int handle, struct VarLen data) {
    if(data.len <= 0)
      return -1;

    unsigned char *buf = (unsigned char *)nxcompat_alloc(data.len);

    if (!buf) return -SC_NOMEM;

    int ret;
    ret = IPC_TransferFrom(call_handle, data.desc_num, buf, 
			   (unsigned int)data.data, data.len);
    if(ret != 0)
      return -1;


    ret = i810_write(buf, data.len, NULL);

    nxcompat_free(buf);

    return ret;
  }
}
