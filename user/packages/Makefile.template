# Make __PLACEHOLDER__ for Nexus
#
# to adapt to a particular software package, 
# replace all occurrences of __PLACEHOLDER__
# (and you'll probably need some additional changes

# source information: version and filepath to archive
APP_NAME	:= __PLACEHOLDER__
APP_VERSION	:= __PLACEHOLDER__
APP_BASE	:= $(APP_NAME)-$(APP_VERSION)
APP_SRC		:= $(APP_BASE).tar.gz

ifeq ($(BUILD_VERBOSE),)
REDIR		:= >/dev/null
endif

# target of make -C $APP_BASE
# select whatever binary or library you require
TARGET 	:= $(APP_BASE)/__PLACEHOLDER__

# library and header includes 
# RELATIVE to .../packages/$PACKAGEDIR. 
# This build will FAIL from other locations
NXBUILDDIR	:= $(PWD)/../../..
NXLIBDIR	:= $(NXBUILDDIR)/user/lib

GCC_MAJOR       := $(shell gcc -dumpversion | cut -d'.' -f1)
GCC_MINOR       := $(shell gcc -dumpversion | cut -d'.' -f2)
GCC_HOME	:= /usr/lib/gcc/$(shell gcc -dumpmachine)/$(shell gcc -dumpversion)

# configuration options
NX_CFLAGS	:= -fno-stack-protector \
		   -I . \
		   -I $(NXBUILDDIR)/user/include \
		   -I $(NXBUILDDIR)/common/include \
		   -I $(GCC_HOME)/include \
		   -I $(GCC_HOME)/include-fixed \
		   -nostdinc \
		   -W -Wall -Wno-unused-parameter -Wsign-compare

NX_LDFLAGS	:= -Bstatic -e compatmain -nostdlib

NX_LIBS		:= -Wl,--start-group,$(NXLIBDIR)/liblwip.a,$(NXLIBDIR)/libc.a,$(NXLIBDIR)/libnexus.a,$(NXLIBDIR)/libnexus-sec.a,$(NXLIBDIR)/libnexus-sys.a,$(NXLIBDIR)/libcrypto.a,$(NXLIBDIR)/libssl.a,$(NXLIBDIR)/libz.a,$(GCC_HOME)/libgcc.a,$(NXLIBDIR)/crti.o,$(NXLIBDIR)/crt1.o,$(NXLIBDIR)/crtn.o,--end-group

NX_MAKE_OPTS 	:= CC=gcc LD=GCC CFLAGS="$(NX_CFLAGS)" LDFLAGS="$(NX_LDFLAGS)" LIBS="$(NX_LIBS)"

# change to match your configure
CONFIG_OPTS	:= --disable-shared \
		   --enable-static \
		   --with-gnu-ld \
		   --with-openssl=$(NXBUILDDIR)/user CC=gcc 

.PHONY: all reinstall install clean distclean

all: $(TARGET)

# unpack and patch
# choose a file in the unpacked archive as target for this rule
$(APP_BASE)/__PLACEHOLDER__:
	@echo "Unpacking"
	@tar -xf $(APP_SRC)
	@echo "Patching"
	@(cd $(APP_BASE); patch -p1 < ../$(APP_BASE).nexus.patch)

# configure
# note that we do not redirect using NX_MAKE_OPTS, so it will search
# in standard /usr/include and friends. Redirection causes the error
# `` error: C compiler cannot create executables''
$(APP_BASE)/config.status: $(APP_BASE)/__PLACEHOLDER__
	@echo "Configuring"
	@(cd $(APP_BASE); ./configure $(CONFIG_OPTS))

# make	
$(TARGET): $(APP_BASE)/config.status
	@echo "Building"
	@(cd $(APP_BASE); make $(NX_MAKE_OPTS))

install: $(TARGET)
	@echo "Installing"
	@echo 'XXX install'

# optionally, modify to speed up reinstall by avoiding full clean
reinstall:
	make clean
	make $(TARGET)
	make install

clean:
	@make -C $(APP_BASE) $(NX_MAKE_OPTS) clean

distclean: 
	@rm -rf $(APP_BASE)

